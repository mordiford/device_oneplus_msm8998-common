<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2015-2016 The CyanogenMod Project
     Copyright (C) 2017 The LineageOS Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<resources>

   <!-- Paths to the libraries that contain device specific key handlers -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
        <item>/system/priv-app/LineageParts/LineageParts.apk</item>
        <item>/system/priv-app/ConfigPanel/ConfigPanel.apk</item>
    </string-array>

    <!-- Names of the key handler classes -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
        <item>org.lineageos.lineageparts.gestures.KeyHandler</item>
        <item>org.lineageos.settings.device.KeyHandler</item>
    </string-array>

    <!-- Default value for proximity check on screen wake
     NOTE ! - Enable for devices that have a fast response proximity sensor (ideally < 300ms)-->
    <bool name="config_proximityCheckOnWake">true</bool>
    <integer name="config_proximityCheckTimeout">100</integer>
    <bool name="config_proximityCheckOnWakeEnabledByDefault">true</bool>

    <!-- All the capabilities of the LEDs on this device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following capabilities present:
         // Device has a color adjustable battery light.
         LIGHTS_RGB_NOTIFICATION_LED = 1
         // Device has a color adjustable notification light.
         LIGHTS_RGB_BATTERY_LED = 2
         LIGHTS_MULTIPLE_NOTIFICATION_LED = 4 (deprecated)
         // The notification light has adjustable pulsing capability.
         LIGHTS_PULSATING_LED = 8
         // Device has a multi-segment battery light that is able to
         // use the light brightness value to determine how many
         // segments to show (in order to represent battery level).
         LIGHTS_SEGMENTED_BATTERY_LED = 16
         // The notification light supports HAL adjustable brightness
         // via the alpha channel.
         // Note: if a device notification light supports LIGHTS_RGB_NOTIFICATION_LED
         // then HAL support is not necessary for brightness control.  In this case,
         // brightness support will be provided by lineage-sdk through the scaling of
         // RGB color values.
         LIGHTS_ADJUSTABLE_NOTIFICATION_LED_BRIGHTNESS = 32
         // Device has a battery light.
         LIGHTS_BATTERY_LED = 64
         // The battery light supports HAL adjustable brightness via
         // the alpha channel.
         // Note: if a device battery light supports LIGHTS_RGB_BATTERY_LED then HAL
         // support is not necessary for brightness control.  In this case,
         // brightness support will be provided by lineage-sdk through the scaling of
         // RGB color values.
         LIGHTS_ADJUSTABLE_BATTERY_LED_BRIGHTNESS = 128

         For example, a device with notification and battery lights that supports
         pulsating and RGB control would set this config to 75. -->
    <integer name="config_deviceLightCapabilities">235</integer>

    <!-- Color temperature settings for LiveDisplay. These were obtained by
         measuring the display at various color balance levels. -->
    <integer name="config_minColorTemperature">2500</integer>
    <integer name="config_maxColorTemperature">25000</integer>

    <!-- Corresponds to color balance level of zero, this is the native
         display temperature -->
    <integer name="config_dayColorTemperature">8000</integer>
    <integer name="config_nightColorTemperature">5000</integer>

    <!-- For high brightness mode -->
    <integer name="config_outdoorAmbientLux">20000</integer>

    <!-- Disable this by default, since it's actually using the QC FOSS algorithm for
         OLED displays and can cause a bit of discoloration. Reinvestigate after tuning -->
    <bool name="config_defaultCABC">false</bool>

   <!-- Display mode remapping table.
        If the mode names returned by the backend do not match
        the predefined and translated strings in the Settings
        app, they can be remapped here. The format is
        "oldname:newname", one per entry. -->
    <string-array name="config_displayModeMappings" translatable="false">
	      <item>native:standard</item>
        <item>hal_native_identity:standard</item>
        <item>night_mode:reading</item>
        <item>sharpness8:Grayscale</item>
        <item>srgb:srgb</item>
        <item>dci_p3:dci_p3</item>
    </string-array>

    <!-- Turn on LiveDisplay auto mode by default -->
    <integer name="config_defaultLiveDisplayMode">0</integer>

    <!-- Should we filter any display modes which are unmapped? -->
    <bool name="config_filterDisplayModes">true</bool>
</resources>
